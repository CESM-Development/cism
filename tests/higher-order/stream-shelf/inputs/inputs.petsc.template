#inputs file for Amr ice-sheet solver
# template for twisty-stream convergence test runs
main.maxTime = 10000000  # maximum time to run to
main.maxStep = 0   # maximum number of steps to run
main.constitutiveRelation = L1L2
l1l2.solverTolerance = 1.0e-6

main.domain_size = 160000.0 160000.0 160000.0 

main.poutBaseName = pout.petsc.l@MAXLEV.@RES

geometry.problem_type = basic
#geometry.basal_type = xInclineZb
geometry.basal_type = constantZb
geometry.thickness_type = constantThickness1km

geometry.beta_type = twistyStreamx
geometry.betaValue = 100000.0
#geometry.betaEps = 0.0001
geometry.betaEps = 5.0e-5
# slope should correspond to a .5 degree x-slope
geometry.basalSlope = -0.0087488664 0.0  # 0.5 degree slope
#geometry.basalSlope = -0.001745331 0.0 # 0.1 degree slope

surfaceFlux.type = zeroFlux
basalFlux.type = zeroFlux
CalvingModel.type = NoCalvingModel

amr.maxLevel = @MAXLEV   # finest level allowed in simulation
amr.ref_ratio = 2 2 2 2 
amr.num_cells = @RES @YRES 16   #number of cells in base grid
amr.is_periodic = 1 1 1    # 1 if domain is periodic 
# (note that periodic BC's override physical BC types)
# physical BC types:  0 = homogeneous Dirichlet
#                     1 = homogeneous Neumann
bc.lo_bc = 0 0 0  
bc.hi_bc = 0 0 0  

amr.cfl = 0.1  # "cfl" number
amr.initial_cfl = 0.1  # "cfl" number
amr.max_dt_grow_factor = 1.1 #max amount dt can grow from one timestep to another

#include vertical shear in flux velocities
amr.additional_velocity = 1


amr.plot_interval = 1  
amr.plot_prefix = stream.@RES.l@MAXLEV.petsc.
amr.write_preSolve_plotfiles = true
amr.write_solver_rhs = 1
amr.check_interval = -1
amr.check_prefix = chk
amr.verbosity = 5

amr.regrid_interval = 10000   # number of timesteps between regridding
amr.blockFactor = 4           # block factor used in grid generation
amr.fill_ratio = 0.8          # how efficient are the grids
amr.nestingRadius = 3         # proper nesting radius required
amr.tags_grow = 1             # amount to buffer tags
amr.max_box_size = 256      # largest box length allowed
#amr.tagging_val = 0.001       # min undivided grad(vel) resulting in tagging

amr.tag_on_laplacian_velocity = 1
amr.lap_vel_tagging_val = @TAGVAL

#initial guess 
amr.do_initial_velocity_guess = 1
amr.do_initial_velocity_solve = 1
amr.initial_velocity_guess_type = 1 # linear PDE
amr.initial_velocity_guess_const_mu = 9.9e+6
amr.initial_velocity_guess_solver_type = 0 # Picard

# this problem seems to need more picard iterations
amr.max_solver_iterations = 20

#velocity solve type -- 0=Picard, 1=JFNK, 2=knownVel, 3=petsc
amr.velocity_solver_type = 1

picardSolver.linearSolver = petsc
picardSolver.max__picard_iterations = 1
picardSolver.linearSolver_tolerance =  1.0e-7
picardSolver.vtopSafety = 1.0
picardSolver.num_smooth = 4

JFNKSolver.vtopSafety = 0.9
JFNKSolver.minPicardIterations = 2
JFNKSolver.switchRate = 5.0
JFNKSolver.numMGSmooth = 4
JFNKSolver.maxIter = 20

JFNKSolver.absTol = 1.0e-5
JFNKSolver.relTol = 1.0e-10
#JFNKSolver.BiCGStabRelTol = 4.0e-3
JFNKSolver.BiCGStabRelTol = 1.0e-5
JFNKSolver.maxBiCGStabIter = 10
JFNKSolver.maxBiCGStabIter = 40
JFNKSolver.normType = 2
JFNKSolver.verbosity = 5
JFNKSolver.vtopRelaxMinIter = 4
JFNKSolver.numMGIter = 1
JFNKSolver.h = 0.025
JFNKSolver.hAdaptive = true 
JFNKSolver.mgProlongType = 1

# 0 = relax, 1 = BiCGStab, 2 = GMRES, 3 = CG 4 = petsc
JFNKSolver.solverType = 4
JFNKSolver.maxBiCGStabIter = 50
JFNKSolver.MGtol = 1.0e-5
JFNKSolver.RelaxTol = 1.0e-5
JFNKSolver.maxRelaxIter = 50
JFNKSolver.vtopRelaxTol = 0


#input file for solver benchmark
main.filename = stream.@RES.petsc.000000.2d.hdf5
