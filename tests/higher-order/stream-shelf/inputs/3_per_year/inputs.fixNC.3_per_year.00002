#inputs file for Amr ice-sheet solver
main.maxTime = 10000000000  # maximum time to run to
main.maxStep = 10   # maximum number of steps to run
main.maxStep = 10000000000   # maximum number of steps to run
main.poutBaseName = pout.3_per_year_restart
#main.constitutiveRelation = GlensLaw
main.constitutiveRelation = L1L2
#main.constitutiveRelation = constMu
#constMu.mu = 1.279e8
main.rateFactor = constRate
#constRate.A = 5.7e-18
constRate.A = 9.467e-18 #from Goldberg (2012)
constRate.epsSqr0 = 1.0e-16

#restarting from a BISICLES checkpoint overrides the info from CISM
amr.restart_file = chk.3_per_year_00001.2d.hdf5
#uncomment this at initial restart to set time back to zero
#amr.restart_time = 0.0833333333333

# CISM uses 2 ghost cells
glimmerInterface.numGhost = 2 2 
# latest setup is cell-centered for thickness                        
glimmerInterface.nodalInitialData = 0

main.domain_size = 150000 50000
main.domain_size = 300000 50000

CalvingModel.type = FixedFrontCalvingModel
CalvingModel.min_thickness = 10.0

#CalvingModel.type = DomainEdgeCalvingModel
#CalvingModel.front_lo = 0 0 # for half-domain
#CalvingModel.front_lo = 1 0 # for full-domain
#CalvingModel.front_hi = 1 0

surfaceFlux.type = fortran
surfaceFlux.backgroundFlux = 0.3
basalFlux.type = maskedFlux
basalFlux.grounded.type = zeroFlux
basalFlux.floating.type = fortran
basalFlux.floating.backgroundFlux = 0.0 

geometry.problem_type = fortran
geometry.setDefaultValues = true
geometry.thicknessDefault = 0.0
geometry.topographyDefault = -1000.0                         


#geometry.beta_type = fortran
geometry.beta_type = constantBeta
geometry.betaValue = 30.4582 # value from Goldberg et al

# don't reset floating friction to zero for circular shelf problem
#amr.reset_floating_friction = true

geometry.basalSlope = 0 0 0 
#geometry.basalSlope = 0  0

#amr.gridsFile = grids.dat

amr.maxLevel = 0   # finest level allowed in simulation
amr.ref_ratio = 2 2 2 2 2
amr.num_cells = 168 56 10   #number of cells in base grid
amr.num_cells = 336 56 10   #grown domain (2x length in x)
#amr.num_cells = 168 28 10   #coarsened grown domain (2x length in x)

amr.is_periodic = 0 0 0       # 1 if domain is periodic 
# (note that periodic BC's override physical BC types)
# velocity BC types:  0 = homogeneous Dirichlet
#                     1 = homogeneous Neumann
bc.lo_bc = 0 0 0  
bc.hi_bc = 1 0 0   

#include vertical shear
amr.additional_velocity = 0

amr.temporal_accuracy = 1
#amr.temporal_accuracy = 2
#amr.temporal_accuracy = 4

amr.cfl = 0.3  # "cfl" number
amr.initial_cfl = 0.1  # "cfl" number
amr.max_dt_grow_factor = 1.1 #max amount dt can grow from one timestep to another

#amr.do_initial_velocity_solve = 0 #debugging help -- makes runs go faster


amr.plot_interval = 1
amr.plot_prefix = plot.3_per_year.restart.
amr.write_solver_rhs = 1
amr.write_preSolve_plotfiles = false
amr.write_flux_velocities = true
amr.write_base_velocities = true

amr.check_interval = 10
amr.check_prefix = chk.3_per_year_restart
amr.check_overwrite = true
amr.verbosity = 5

amr.ref_ratio = 2 2 2   # refinement ratios
amr.regrid_interval = 10   # number of timesteps between regridding
amr.blockFactor = 4           # block factor used in grid generation
amr.blockFactor = 2           # block factor used in grid generation
amr.fill_ratio = 0.8          # how efficient are the grids
amr.nestingRadius = 1         # proper nesting radius required
amr.tags_grow = 2             # amount to buffer tags
amr.max_box_size = 28         # largest box length allowed
#amr.max_box_size = 10000         # largest box length allowed

amr.tag_on_grad_velocity = 0
amr.tag_on_laplacian_velocity = 1
#amr.tag_on_grounded_laplacian_velocity = 1 #for now, tag on shelf as well
amr.lap_vel_tagging_val = 100
amr.tag_on_strain_rate_invariant = 0
amr.strain_rate_invariant_tagging_val = 1
amr.tag_grounding_line = 1 
amr.grounding_line_tagging_min_vel = 100
#amr.grounding_line_tagging_max_basal_friction_coef = 1000.0

#amr.tagSubsetBoxesFile = tag-subset.stream-shelf


#initial guess 
amr.do_initial_velocity_guess = 1
amr.do_initial_velocity_solve = 1
amr.initial_velocity_guess_type = 1 # linear PDE
amr.initial_velocity_guess_const_mu = 9.9e+6
amr.initial_velocity_guess_solver_type = 0 # Picard

amr.velocity_solver_tolerance = 1.0e-10

#velocity solve type -- 0 = Picard, 1 = JFNK
amr.velocity_solver_type = 1

picardSolver.num_smooth = 8
picardSolver.linearSolver = multigrid
picardSolver.max_iterations = 50
picardSolver.vtopSafety = 0.9

JFNKSolver.vtopSafety = 0.9
JFNKSolver.minPicardIterations = 3

JFNKSolver.switchRate = 5.0
JFNKSolver.numMGSmooth = 8
JFNKSolver.maxIter = 100

JFNKSolver.absTol = 1.0e-2
JFNKSolver.relTol = 1.0e-10
#JFNKSolver.BiCGStabRelTol = 4.0e-3
JFNKSolver.BiCGStabRelTol = 1.0e-5
JFNKSolver.maxBiCGStabIter = 10
JFNKSolver.maxBiCGStabIter = 40
JFNKSolver.normType = 0
JFNKSolver.verbosity = 5
JFNKSolver.vtopRelaxMinIter = 4
JFNKSolver.vtopRelaxTol = 0
JFNKSolver.numMGIter = 1
JFNKSolver.h = 0.025
JFNKSolver.hAdaptive = true 
JFNKSolver.mgProlongType = 1
#JFNKSolver.writeResiduals = 1

# 0 = relax, 1 = BiCGStab, 2 = GMRES, 3 = MultiGrid
JFNKSolver.solverType = 0
JFNKSolver.maxBiCGStabIter = 50
JFNKSolver.MGtol = 1.0e-5
JFNKSolver.RelaxTol = 1.0e-5
JFNKSolver.maxRelaxIter = 50
JFNKSolver.vtopRelaxTol = 0

#inputs for solver benchmark code

main.filename = plot.stream-shelf.0054.preSolve.000000.2d.hdf5
main.setVelToZero = false
main.interpFinestLevel = false
main.writePlotfile = true
